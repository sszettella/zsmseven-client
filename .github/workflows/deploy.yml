name: Deploy to S3

on:
  push:
    branches:
      - main  # Production deployment
      - develop  # Development deployment
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write  # Required to push tags and commits

jobs:
  deploy-dev:
    name: Deploy to Development
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build application
        env:
          VITE_API_BASE_URL: ${{ secrets.DEV_API_URL }}
          VITE_API_TIMEOUT: 30000
          VITE_TOKEN_KEY: auth_token
          VITE_REFRESH_TOKEN_KEY: refresh_token
          VITE_APP_VERSION: ${{ steps.package-version.outputs.version }}
          VITE_BUILD_NUMBER: ${{ github.run_number }}
          VITE_ENVIRONMENT: development
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://dev.zsm7.com --delete --cache-control max-age=31536000,public
          aws s3 cp s3://dev.zsm7.com/index.html s3://dev.zsm7.com/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html

      - name: Invalidate CloudFront cache (if applicable)
        if: vars.DEV_CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.DEV_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  deploy-prod:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://app.zsm7.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json (from develop via main)
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build application
        env:
          VITE_API_BASE_URL: ${{ secrets.PROD_API_URL }}
          VITE_API_TIMEOUT: 30000
          VITE_TOKEN_KEY: auth_token
          VITE_REFRESH_TOKEN_KEY: refresh_token
          VITE_APP_VERSION: ${{ steps.package-version.outputs.version }}
          VITE_BUILD_NUMBER: ${{ github.run_number }}
          VITE_ENVIRONMENT: production
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://app.zsm7.com --delete --cache-control max-age=31536000,public
          aws s3 cp s3://app.zsm7.com/index.html s3://app.zsm7.com/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html

      - name: Invalidate CloudFront cache (if applicable)
        if: vars.PROD_CLOUDFRONT_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.PROD_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Bump develop version for next release
        if: github.event_name != 'workflow_dispatch'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin develop
          git checkout develop
          npm version patch -m "chore: bump develop version ahead of production"
          git push origin develop --follow-tags

      - name: Trigger develop redeployment
        if: github.event_name != 'workflow_dispatch'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yml/dispatches \
            -d '{"ref":"develop"}'
